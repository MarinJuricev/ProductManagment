
version: '3.7'

services:
  traefik:
    image: "traefik:v2.4.7"
    container_name: "traefik"
    restart: "unless-stopped"
    network_mode: "host"
    command:
      - "--global.sendAnonymousUsage=false"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=0.0.0.0:80"
      - "--entrypoints.websecure.address=0.0.0.0:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=route53"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.delaybeforecheck=30"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=hrvoje.cacic@MarinJuricev.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}

  api:
    image: 198310435290.dkr.ecr.eu-central-1.amazonaws.com/product-inventory-kmp-backend:backend-dev
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`inventory-kmp.MarinJuricev.dev`)"
      - "traefik.http.services.api.loadbalancer.server.port=8888"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    ports:
      - "8888:8888"
    environment:
      - APP_ENVIRONMENT=production
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}
      - EMAIL_SERVICE_API_KEY=${EMAIL_SERVICE_API_KEY}

#This is a shared database for dev and production!
  postgres:
    image: postgres:13
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: MarinJuricev
      POSTGRES_PASSWORD: yourpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

volumes:
  postgres_data: