name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action'
        required: true
        default: 'apply'
        type: choice
        options:
          - plan
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Run Terraform ${{ github.event.inputs.action }}
    env:
      AWS_REGION: eu-central-1
      TF_VERSION: 1.9.5
      TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_ROUTE53 }}
      TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ROUTE53 }}
      TF_VAR_FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
      TF_VAR_EMAIL_SERVICE_API_KEY: ${{ secrets.EMAIL_SERVICE_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TERRAFORM }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TERRAFORM }}

      - name: Initialize Terraform
        working-directory: terraform/
        run: terraform init

      - name: Validate Terraform
        working-directory: terraform/
        run: terraform validate

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        working-directory: terraform/
        run: terraform plan

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        working-directory: terraform/
        run: terraform apply -auto-approve

      - name: Terraform Plan for Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: terraform/
        run: terraform plan -destroy

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: terraform/
        run: terraform destroy -auto-approve